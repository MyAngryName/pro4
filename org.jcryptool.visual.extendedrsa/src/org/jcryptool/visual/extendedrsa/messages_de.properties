ExtendedRSA_Visual_1=Alice Whitehat
ExtendedRSA_Visual_10=Erklärungen
ExtendedRSA_Visual_11=RSA
ExtendedRSA_Visual_12=1234
ExtendedRSA_Visual_13=MpRSA
ExtendedRSA_Visual_14=RSA
ExtendedRSA_Visual_15=MpRSA
ExtendedRSA_Visual_16=1234
ExtendedRSA_Visual_17=RSA
ExtendedRSA_Visual_18=1234
ExtendedRSA_Visual_19=none
ExtendedRSA_Visual_2=Bob Whitehat
ExtendedRSA_Visual_20=unknown
ExtendedRSA_Visual_21=RSA
ExtendedRSA_Visual_22=1234
ExtendedRSA_Visual_23=MpRSA
ExtendedRSA_Visual_24=RSA
ExtendedRSA_Visual_25=MpRSA
ExtendedRSA_Visual_26=1234
ExtendedRSA_Visual_27=RSA
ExtendedRSA_Visual_28=1234
ExtendedRSA_Visual_29=none
ExtendedRSA_Visual_3=\ 
ExtendedRSA_Visual_30=unknown
ExtendedRSA_Visual_4=Erweitertes RSA-Kryptosystem (inklusive Identitäten und multi-primem RSA)
ExtendedRSA_Visual_5=In diesem Plugin können Sie mit dem RSA-Verfahren verschiedene Aktionen durchführen. Dazu agieren Sie im Namen unterschiedlicher Identitäten. Sie können z.B. als 'Alice Whitehat' einen Text verschlüsseln und an 'Bob Whitehat' senden. Bob Whitehat kann dann die empfangene Nachricht entschlüsseln, und umgekehrt.
ExtendedRSA_Visual_6=Identitäten-Verwaltung
ExtendedRSA_Visual_7=Neue Identität erstellen
ExtendedRSA_Visual_8=Identität ein-/ausblenden
ExtendedRSA_Visual_9=Identität löschen
Identity_0=Die Identitäten aus Ihrem Schlüsselspeicher werden in dieser Visualisierung als Tabs (Registerkarten) angezeigt. Schon bei der Auslieferung befinden sich die Identitäten \u201EAlice Whitehat\u201C und \u201EBob Whitehat\u201C im Schlüsselspeicher und werden dehalb auch initial schon als Tabs angezeigt.\n\nJede Registerkarte stellt eine Identität dar. Durch den Button \u201EIdentitäten ein-/ausblenden\u201C können bestehende Identitäten als Registerkarten angezeigt oder ausgeblendet werden. Wenn eine neue Identität erstellt wird, wird diese erst als Registerkarte angezeigt, wenn Sie durch \u201EIdentitäten ein-/ausblenden\u201C ausgewählt wurde\!\n\nZu allen Aktionen finden Sie in diesem Bereich Erläuterungen.
Identity_1=Aktion: Nachricht verschlüsseln und senden\n\nFür den Verschlüsselungsvorgang werden die Parameter N und e benötigt. Mehr Informationen zu den einzelnen Parametern finden Sie in der Registerkarte \u201EMeine Schlüssel\u201C unter der Aktion \u201ESchlüssel verwalten\u201C.\n\n Vorgehensweise:\n\n1) Geben Sie einen optionalen Betreff und eine beliebige Nachricht ein.\n\n2) Wählen Sie einen Empfänger aus (zum Beispiel Bob Whitehat). Hinweis: Diese Visualisierung erlaubt nur einen Empfänger.\n\n3) Wählen Sie einen öffentlichen Schlüssel des Empfängers aus.\n\n4) Klicken Sie auf den Button \u201ENachricht verschlüsseln\u201C.\n\n5) Klicken Sie auf den Button \u201ENachricht senden\u201C, um die verschlüsselte Nachricht zu verschicken und im Nachrichtenspeicher abzulegen.
Identity_10=Wählen Sie 2 verschiedene Primzahlen p und q, sowie einen Exponenten e:
Identity_100=p
Identity_101=q
Identity_102=r
Identity_103=d
Identity_104=e
Identity_105=N
Identity_106=Algorithmus
Identity_107=Format
Identity_108=p
Identity_109=q
Identity_11=Wählen Sie 3 verschiedene Primzahlen p, q, r und einen Exponenten e:
Identity_110=r
Identity_111=s
Identity_112=d
Identity_113=e
Identity_114=N
Identity_115=Algorithmus
Identity_116=Format
Identity_117=p
Identity_118=q
Identity_119=r
Identity_12=Wählen Sie 4 verschiedene Primzahlen p, q, r, s und einen Exponenten e:
Identity_120=s
Identity_121=t
Identity_122=d
Identity_123=e
Identity_124=N
Identity_125=Passwort eingeben:
Identity_126=Achtung: Noch keine Schlüssel für diese Identität vorhanden.
Identity_127=Parameter
Identity_128=Wert
Identity_129=Schlüssel verwalten
Identity_13=Wählen Sie 5 verschiedene Primzahlen p, q, r, s, t und einen Exponenten e:
Identity_130=Wählen Sie einen öffentlichen Schlüssel: 
Identity_131=Mit Klick auf "Schlüssel attackieren" wird versucht, den Modulus N von 
Identity_132=zu faktorisieren (Bitlänge von N:
Identity_133=bit):
Identity_134=Schlüssel attackieren
Identity_135=Parameter
Identity_136=Wert
Identity_137=Öffentlichen Schlüssel angreifen
Identity_138=Display results
Identity_139=\nDie Faktorisierung war erfolgreich. Folgende Werte konnten in 
Identity_14=Hier können Sie neue Schlüssel mit gängigen Schlüsselgrößen erstellen:
Identity_140=p
Identity_141=q
Identity_142=p
Identity_143=q
Identity_144=r
Identity_145=p
Identity_146=q
Identity_147=r
Identity_148=s
Identity_149=p
Identity_15=Hier können Sie sich Ihre Schlüsselpaare und die öffentlichen Schlüssel aller Mitspieler ansehen.\n\nHinweis: Um einen Ihrer privaten Schlüssel anzuzeigen, müssen Sie Ihr Passwort eingeben. Die Anzeige öffentlicher Schlüssel (public keys) erfordert keine Passwort-Eingabe.
Identity_150=q
Identity_151=r
Identity_152=s
Identity_153=t
Identity_154=e
Identity_155=d
Identity_156=Neue Schlüssel erstellt
Identity_159=Kein Betreff
Identity_16=Achtung: Momentan sind keine verschlüsselten Nachrichten verfügbar.
Identity_160=3
Identity_161=65537
Identity_162=Aktionsfenster
Identity_163=Bitte wählen Sie eine Aktion für die Identität im aktuellen Tab (
Identity_164=), oder einen Button im Feld "Identitäten-Verwaltung".
Identity_165=Aktionsfenster
Identity_166=Aktionsfenster
Identity_167=Aktionsfenster
Identity_168=13
Identity_169=Multi-primer RSA-Schlüssel wurde erfolgreich erstellt. Der geheime Exponent d ist: 
Identity_17=Achtung: 'p' ist keine Primzahl\!
Identity_170=Multi-primer RSA-Schlüssel wurde erfolgreich erstellt. Schlüsseldetails aufgrund der Größe bitte im Tab 'Meine Schlüssel' betrachten.
Identity_172= Sekunden rekonstruiert werden:
Identity_173=N: 
Identity_174=Absender: 
Identity_175=Empfänger: 
Identity_176=Schlüssel rekonstruieren
Identity_177=Der klassische RSA-Schlüssel wurde erfolgreich mit dem Passwort '1234' rekonstruiert und in den Schlüsselbund aufgenommen.
Identity_178=Der multi-prime Schlüssel wurde erfolgreich mit dem Passwort '1234' rekonstruiert und in den Schlüsselbund aufgenommen.
Identity_179=Hinweis: Der Wert des gewählten Parameters wird in die Zwischenablage kopiert.
Identity_18=Achtung: 'q' ist keine Primzahl\!
Identity_180=Hinweis: Das Standardpasswort für die privaten Schlüssel von Alice und Bob Whitehat oder von faktorisierten privaten Schlüsseln lautet '1234'.
Identity_19=Achtung: 'r' ist keine Primzahl\!
Identity_191=Ein Fehler beim Zugriff auf eine interne Datenstruktur (RSAKey) ist ein Fehler aufgetreten. Das sollte zu keinen Problemen führen. Falls doch ein Problem auftritt, starte das Plug-in bitte neu.
Identity_2=Aktion: Nachricht empfangen und entschlüsseln\n\nFür den Entschlüsselungsvorgang werden die Parameter N und d benötigt. Mehr Informationen zu den einzelnen Parametern finden Sie in der Registerkarte \u201EMeine Schlüssel\u201C unter der Aktion \u201ESchlüssel verwalten\u201C.\n\nVorgehensweise:\n\n1) Wählen Sie eine beliebige Nachricht aus dem Nachrichtenspeicher aus.\n\n2) Wählen Sie einen Ihrer privaten Schlüssel aus, und geben Sie das entsprechende Passwort ein.\n\n3) Klicken Sie auf den Button \u201ENachricht entschlüsseln\u201C. Die Nachricht kann nur mit dem passenden privaten Schlüssel erfolgreich entschlüsselt werden.\n\n4) Klicken Sie auf den Button "Nachricht löschen", um die verschlüsselte Nachricht aus dem Nachrichtenspeicher zu löschen (nur für den tatsächlichen Empfänger möglich).
Identity_20=Achtung: 's' ist keine Primzahl\!
Identity_21=Achtung: 't' ist keine Primzahl\!
Identity_22=Achtung: 'e' ist kein passender Exponent ('e' muss zwischen 1 und \u03C6(n)={0} liegen)\!
Identity_222=Achtung: Der 'ggt' von 'e' und \u03C6(n)={0} ist {1} (Der 'ggt' muss 1 sein)\!
Identity_23=Achtung: Bitte verschiedene Primzahlen auswählen\!
Identity_24=Achtung: Bitte eine größere Primzahl als 13 eingeben\!
Identity_25=Achtung: Es ist noch kein angreifbarer Schlüssel im Schlüsselspeicher.
Identity_26=
Identity_27=\ - 
Identity_28=Aktionen:
Identity_29=Betreff der Nachricht:
Identity_3=Die Nachricht wurde erfolgreich in den Nachrichtenspeicher aufgenommen. Sie können nun eine neue Nachricht verschlüssen und senden oder sich die verschlüsselte Nachricht beim Empfänger ansehen.
Identity_30=Nachricht:
Identity_31=Verschlüsselte Nachricht (hexadezimale Darstellung):
Identity_32=Empfänger:
Identity_33=Nachricht senden
Identity_34=Schlüssel auswählen:
Identity_35=Nachricht verschlüsseln
Identity_36=Nachricht verschlüsseln und senden
Identity_37=Nachricht auswählen: 
Identity_38=Verschlüsselte Nachricht (hexadezimale Darstellung):
Identity_39=Entschlüsselte Nachricht:
Identity_4=Die Nachricht wurde nun endgültig aus dem Nachrichtenspeicher gelöscht. Falls für diese Identitäten weitere Nachrichten im Nachrichtenspeicher existieren, können Sie sich diese nun ansehen. Andernfalls müssen Sie vorher weitere Nachrichten verschlüsseln und an diese Identität senden.
Identity_40=Schlüssel auswählen:
Identity_41=Nachricht löschen
Identity_42=Passwort eingeben:
Identity_43=Nachricht entschlüsseln
Identity_44=Nachricht empfangen und entschlüsseln
Identity_45=Neuen Schlüssel erstellen
Identity_46=RSA
Identity_47=p:
Identity_48=q:
Identity_49=e:
Identity_5=Das eingegebene Passwort für den selektierten privaten Schlüssel ist falsch\!
Identity_50=Zufälliges 'e' wählen
Identity_51=Multi-primer RSA
Identity_52=Anzahl der Primzahlen (3-5):
Identity_53=p:
Identity_54=q:
Identity_55=r:
Identity_56=s:
Identity_57=t:
Identity_58=e:
Identity_59=Zufälliges 'e' wählen
Identity_6=Aktion: Schlüssel verwalten - Neuen Schlüssel erstellen\n\nHier kann ein Schlüssel mit ausgewählten Parametern erstellt werden. Der RSA-Algorithmus ist in zwei Varianten implementiert:\n\n1) Für den klassischen RSA-Algorithmus werden zwei verschiedene Primzahlen p und q benötigt. Diese können entweder ausgewählt oder eingegeben werden. Sofern p und q zulässig sind, kann ein Exponent e ausgesucht, eingegeben oder generiert werden.\n\n2) Beim \u201Emulti-primen RSA\u201C muss zuerst die Anzahl der Primzahlen (zwischen 3 und 5) festgelegt werden. Die Parameter können hier analog zum klassischen RSA angegeben werden.\n\nAm Ende der Schlüsselerzeugung muss ein Passwort für den privaten Schlüssel festgelegt werden.\n\nKlicken Sie auf den Button \u201ESchlüssel erstellen\u201C, um den neuen Schlüssel mit den gewählten Parametern im Schlüsselspeicher abzulegen.
Identity_60=Passwort eingeben:
Identity_61=Passwort wiederholen:
Identity_62=Schlüssel erstellen
Identity_63=Klassischer RSA-Schlüssel wurde erfolgreich erstellt. Der geheime Exponent d ist: 
Identity_64=.
Identity_65=Klassischer RSA-Schlüssel wurde erfolgreich erstellt. Schlüsseldetails aufgrund der Größe bitte im Tab 'Meine Schlüssel' betrachten.
Identity_66=Neuen Schlüssel erstellen (erweitert)
Identity_67=RSA
Identity_68=Schlüssellänge wählen:
Identity_69=1024
Identity_7=Aktion: Schlüssel verwalten - Neuen Schlüssel erstellen (erweitert)\n\nIn dieser Registerkarte können Schlüssel mit aktuell verwendeten Schlüssellängen erstellt werden. Es muss nur die gewünschte Schlüssellänge bzw. die Anzahl der Primzahlen ausgewählt werden.\n\nAm Ende der Schlüsselerzeugung muss ein Passwort für den privaten Schlüssel festgelegt werden.\n\nKlicken Sie auf den Button \u201ESchlüssel erstellen\u201C, um den neuen Schlüssel mit den gewählten Parametern im Schlüsselspeicher abzulegen.
Identity_70=2048
Identity_71=Multi-primer RSA
Identity_72=Anzahl der Primzahlen (3-5):
Identity_73=Schlüssellänge wählen:
Identity_74=1024
Identity_75=2048
Identity_76=Passwort eingeben:
Identity_77=Passwort wiederholen:
Identity_78=Schlüssel erstellen
Identity_79=RSA
Identity_8=Aktion: Schlüssel verwalten - Meine Schlüssel\n\nEin Schlüsselpaar besteht aus einem \u201Eprivaten Schlüssel\u201C und einem \u201Eöffentlichen Schlüssel\u201C:\n\na) Der private Schlüssel (N, d):\n- Der Modulus N ist sowohl Teil des öffentlichen wie des privaten Schlüssels.\n- Der private Exponent d muss geheim gehalten werden. Er ergab sich aus der Berechnung e^(-1) modulo phi(N).\n\nb) Der öffentliche Schlüssel (N, e):\n- Der Modulus N ist sowohl Teil des öffentlichen wie des privaten Schlüssels.\n- Der öffentliche Exponent e (er befindet sich üblicherweise im Bereich von 17 \u2013 65537) muss relativ prim zu phi(N) sein.\n\nBeim \u201Emulti-primen\u201C RSA-Verfahren können mehr als zwei Primzahlen gewählt werden. In diesem Plugin ist die Anzahl auf drei bis fünf Primzahlen beschränkt. Theoretisch ist die Anzahl jedoch nach oben offen.
Identity_80=Klassischer RSA-Key erfolgreich erstellt. Schlüsseldetails aufgrund der Größe bitte im Tab 'Meine Schlüssel' betrachten.
Identity_81=Meine Schlüssel
Identity_82=Schlüssel auswählen:
Identity_83=PublicKey
Identity_84=Schlüsseldaten anzeigen
Identity_85=Algorithmus
Identity_86=Format
Identity_87=e
Identity_88=N
Identity_89=RSA
Identity_9=Aktion: Öffentlichen Schlüssel angreifen\n\nIn dieser Registerkarte können Sie versuchen, einen öffentlichen Schlüssel anzugreifen. Wenn der Modulus N kurz genug ist (weniger als 256 bit Länge), wird es möglich sein, N in "endlicher Zeit" zu faktorisieren. Die Faktorisierung liefert die verwendeten Primzahlen, und mit diesen kann der geheime Schlüssel d rekonstruiert werden. Somit können Sie sich als der tatsächliche Schlüsselbesitzer ausgeben und eventuell Nachrichten lesen, die für den eigentlichen Schlüsselbesitzer bestimmt sind.\n\nAchtung: Das Faktorisieren kann viel Zeit in Anspruch nehmen. Mit aktueller Hardware werden Sie N mit einer Bitlänge von ca. 64 bit in einer Stunde faktorisieren können (getestet mit einem Notebook mit Intel Core i5 2.4Ghz und 8GB RAM).\n\nDa die Sicherheit von RSA auf langen Schlüsseln beruht (bei denen der Faktorisierungsvorgang mehrere Jahre dauern würde), wird empfohlen, zum Verschlüsseln/Signieren Schlüssel größer als 1024 bit Länge zu verwenden.
Identity_90=Algorithmus
Identity_91=Format
Identity_92=p
Identity_93=q
Identity_94=d
Identity_95=e
Identity_96=N
Identity_97=Es wurden folgende Schlüssel erzeugt:\n
Identity_98=Algorithmus
Identity_99=Format
IdentityManager_0=PLACEHOLDER
IdentityManager_1=create new keypair
IdentityManager_10=InvocationTargetException while generating a key pair
IdentityManager_11=\ (OID: 
IdentityManager_12=)
IdentityManager_13=\ 
IdentityManager_14=RSA
IdentityManager_15=\ - 
IdentityManager_16=Bit - 
IdentityManager_17=PublicKey - KeyID:
IdentityManager_18=\ - 
IdentityManager_19=Bit - 
IdentityManager_2=NoSuchAlgorithmException while generating a key pair
IdentityManager_20=\ KeyID: 
IdentityManager_22= gebrochen von:  
IdentityManager_23=\ - 
IdentityManager_24=Bit - 
IdentityManager_25=\ 
IdentityManager_26=\ - 
IdentityManager_27=Bit - 
IdentityManager_28=\ - KeyID:
IdentityManager_3=InvalidAlgorithmParameterException while generating a key pair
IdentityManager_4=SecurityException while generating a key pair
IdentityManager_5=IllegalArgumentException while generating a key pair
IdentityManager_6=ClassNotFoundException while generating a key pair
IdentityManager_7=NoSuchMethodException while generating a key pair
IdentityManager_8=InstantiationException while generating a key pair
IdentityManager_9=IllegalAccessException while generating a key pair
