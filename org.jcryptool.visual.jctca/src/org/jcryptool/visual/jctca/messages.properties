JCTCA_Visual_btn_continue_to_plugin=Continue to plugin
JCTCA_Visual_btn_show_archpic_check=Show signature check
JCTCA_Visual_btn_show_archpic_create=Show certificate creation
JCTCA_Visual_btn_show_archpic_revoke=Show certificate revocation
JCTCA_Visual_grp_explain_headline=Explanation
JCTCA_Visual_Plugin_Headline=JCrypTool Public-Key Infrastructure (JCT-PKI)
JCTCA_Visual_path_to_create_img=icons/en/minica_create.png
JCTCA_Visual_path_to_check_img=icons/en/minica_check.png
JCTCA_Visual_path_to_revoke_img=icons/en/minica_revoke.png
JCTCA_Visual_visual_intro_text=This plug-in shows how a public-key infrastructure (PKI) works. You can create key pairs and certificate signing requests for public keys. Afterwards, you can take a look at each step that your request needs to take through the different parts of the PKI. After the certificate was issued, you can create and check signatures for texts or files. Also, you can revoke your certificate. Every step is accompanied by additional explanations. Further information regarding PKI is given in the online help.
JCTCA_Visual_archpic_create_explain=If somebody wishes to proof, that a public key corresponds to a private key in his possession, he can get a certificate. To that purpose, he creates a "certificate signing request" (CSR) including his public key and forwards it to a so-called "registration authority" (RA). In addition, he needs to provide some proof of identity, e.g. a copy of a photo ID. The RA checks if the person trying to get a certificate is really the person he claims to be. If that is the case, the RA forwards the CSR to a "certification authority" (CA). The CA creates a certificate out of the CSR, signs this certificate and returns it to the user. The whole of RA, CA and the involved processes are also called a "public-key infrastructure" (PKI).
JCTCA_Visual_archpic_check_explain=If the receiver of signed data (e.g. an Email) wants to proof the authenticity of that data, he basically needs to take two steps. First, he needs to check whether the signature was really made by the private key corresponding to the certificate. Second, he needs to get the CRL from the issuing CA. If the certificate has been revoked, the signature is only valid, if the signature was created before the certificate had been revoked.
JCTCA_Visual_archpic_revoke_explain=There are a lot of different reasons, why someone might want to revoke a certificate even before it expires. You can read about this reasons in the online help. If a certificate owner wants to revoke his certificate, he has to create a "revocation request" (RR). This RR is sent to the certification authority. The CA manages a "certificate revocation list" (CRL), which is essentially a list of all certificates that have been revoked. If a CA receives a RR, it adds the certificate in question to the CRL.
Util_CSR_Tree_Head=Certificate Signing Requests
Util_RR_Tree_Head=Revocation Requests
Util_signed_files=Signed files
Util_signed_texts=Signed texts
