#Eclipse modern messages class	
Tab0_Head0=eXtended Merkle-Signaturverfahren	
Tab0_Key_Button=XMSS-Schlüsselpaar erzeugen
MerkleTree_Generation_Info=Bitte erstellen Sie zuerst ein XMSS-Schlüsselpaar.
Tab0_MessageBox0=Sie haben erfolgreich ein XMSS-Schlüsselpaar erstellt.
Tab0_Txt0=Das eXtended Merkle signature scheme (XMSS) ist ein Verfahren, das auf der Merkle-Signaturverfahren basiert und dieses erweitert. Unterschied zum MSS-Verfahren ist der Einsatz von Bitmasken und sogenannten L-Trees. Durch diese Erweiterungen ist es möglich, auf eine kollisionsresistente Hashfunktion zu verzichten und diese durch eine Zweite-Urbild-resistente Hashfunktion zu ersetzen. Vorteil des Einsatzes einer Zweiten-Urbild-resistenten Hashfunktion ist, dass die erzeugte Signatur kleiner wird, da Geburtstagsangriffe nicht zum Finden zweiter Urbilder verwendet werden können (weitere Informationen zum Geburtstagsangriff finden Sie in der Onlinehilfe). Das zweite Urbild ist auch schwerer zu brechen als die Kollisionsresistenz, da zu einer gegebenen Nachricht eine kollidierende Nachricht gefunden werden muss. Zum Brechen der Kollisionsresistenz genügt es, ein beliebiges Nachrichtenpaar zu finden, das kollidiert.
Tab0_Txt1=Das XMSS-Verfahren benutzt als Einmalsignatur die Winternitz One Time Signature (WOTS). Die beiden möglichen Varianten sind WOTS+ oder WOTS$. In diesem Plug-in wird die Variante WOTS+ verwendet. Der Winternitz-Parameter w ist ein Parameter dieses Verfahrens. Die Größe der Signatur hängt davon ab. Je größer der Wert, desto kleiner werden die Signaturen, jedoch erhöht sich auch der Berechnungsaufwand. Die Sicherheit wird nicht beeinflusst. Obwohl der Parameter beliebig groß gewält werden könnte, wird praktisch meist 4 und 16 verwendet. Mehr Informationen über das WOTS-Verfahren finden Sie in der Hilfe.
Tab0_Txt2=Bei der Schlüsselerzeugung wird aus einem zufälligen Seed mithilfe eines kryptografischen Pseudozufallszahlengenerators eine beliebige, frei wählbare Anzahl von Einmalschlüsselpaaren und dazugehörigen L-Trees, sowie daraus der MerkleTree, generiert. In der Praxis ist die Anzahl der Einmalsignaturen immer eine Zweierpotenz (2^h), da dies die Verwendung eines vollständigen Binärbaumes ermöglicht. 


Tab1_Head0=eXtended MerkleTree
Tab1_Txt0=Ausgangspunkt für den hier dargestellten eXtended MerkleTree (XMSS-Baum) sind sogenannte L-trees. Sie werden aus den öffentlichen Einmalschlüsseln und dem Seed generiert. Die Wurzelknoten der L-trees bilden die Blätter des XMSS-Baums. Bevor jeweils zwei Blätter oder Knoten gehasht werden, wird noch eine XOR-Operation mit einer zufälligen Bitmaske durchgeführt. Die Bitmasken werden aus dem öffentlichen Seed abgeleitet und erhöhen die Sicherheit zusätzlich.\r\n\r\nSignatur:\r\nZum Signieren einer Nachricht wird zuerst eine Einmalsignatur über die Nachricht erstellt. Da pro Einmalschlüsselpaar nur eine Nachricht signiert werden kann, sind die Einmalschlüsselpaare von 0 bis (2^h)-1 nummeriert und werden nach dem jeweiligen Index des privaten XMSS-Schlüssels verwendet. Der Index wird bei jedem Signaturvorgang aktualisiert. Dadurch wird verhindert, dass ein Einmalschlüsselpaar mehrfach benutzt wird. Eine XMSS-Signatur besteht aus dem Index des Einmalschlüsselpaares, dem verwendeten Seed und der Einmalsignatur. Da bei der Signaturprüfung der MerkleTree bis hin zum Wurzelknoten erneut berechnet und mit dem öffentlichen XMSS-Schlüssel verglichen wird, muss zusätlich der Inhalt der jeweils gegenüberliegenden Blätter und Knoten zur Signatur hinzugefügt werden. Diese ergänzende Information heißt Authentifizierungspfad. Die Signaturerstellung können Sie im Tab "Signierung" auch Schritt für Schritt nachverfolgen.\r\nVerifikation:\r\nDer Vorgang wird im Tab "Verifikation" erklärt.\r\n\r\nSie können Blätter auswählen um deren Hashwert anzuzeigen, sowie den Pfad zur Wurzel sowie den dazugehörigen Authentifikationspfad einfärben zu lassen. Wenn Sie die Maus über einen Knoten halten, erscheint auch dessen Hashwert.\r\nLegende: Gelb - Pfad eines Blattes/Knotens zur Wurzel. Rot - Knoten auf dem Authentifizierungspfad.
Tab1_Txt1=Wählen Sie einen Knoten aus, dessen Hashwert Sie sehen wollen.

MerkleTreeVerify_0=Hier können Sie die im Tab "Signierung" erzeugte Signatur mit Hilfe des richtigen Knotens im MerkleTree verifizieren. Initial wird bei der Anzeige gleich das Blatt mit dem richtigen Index (gelber Pfad) ausgewählt. Sie können auch einen anderes Blatt mit falschem Index auswählen - dann schlägt die Verifikation fehl.\r\n\r\nFür die Verifikation werden folgende Informationen benötigt:\r\n\u2022der öffentliche XMSS-Schlüssel\r\n\u2022die XMSS-Signatur bestehend aus Index, öffentlicher Seed, Einmalsignatur und Authentifizierungspfad\r\n\u2022die Nachricht\r\nFür die Verifikation wird aus der Einmalsignatur und der Nachricht ein öffentlicher Einmalschlüssel berechnet. Dieser öffentliche Einmalschlüssel wird verwendet, um das verknüpfte Blatt des L-Trees zu berechnen. Mit diesem Blatt und dem Authentifizierungspfad wird der Wurzelknoten berechnet. Wenn der errechnete Wert mit dem Wurzelknoten des öffentlichen XMSS-Schlüssels übereinstimmt, ist die Verifikation erfolgreich und die Signatur wird akzeptiert, ansonsten schlägt die Verifikation fehl.

MerkleTreeKeyTab_0=Hier wird das XMSS-Schlüsselpaar angezeigt.\n\u2022 Der öffentliche Schlüssel besteht aus dem Wurzelknoten und dem öffentlichen Seed.\n\u2022 Der private Schlüssel besteht aus dem Index des nächsten zu verwendenden Einmalsignaturschlüsselpaares, dem öffentlichen sowie privaten Seed und allen privaten Einmalschlüsseln.

