#Eclipse modern messages class
#Mon Mar 31 15:53:42 CEST 2014

SignalEncryption_TabTitle=Signal Protokoll - Double Ratchet
<<<<<<< HEAD
SignalEncryption_TabDesc=Beim Signal Protokoll handelt es sich um jenes Verfahren das beim Namensgebenden Signal Messenger als auch WhatsApp zum Einsatz kommt.\nDieses Protokoll gliedert sich grob in 2 Abschnitte:\n         Ein 3-facher Diffie-Hellman (DH) Schlüsselaustausch.\n         Das \u201EDouble Ratchet\u201C Verfahren zum Versenden und Empfangen von Nachrichten.\n\nIn diesem Plugin wird nun das Double Ratchet Verfahren Schritt für Schritt erklärt. Was konkret beim Senden der allerersten Nachricht geschieht ist in der Onlinehilfe dokumentiert. Wichtig davon zu wissen ist, dass Alice so den Shared Secret Key erhält.\nDas Double Ratchet besteht dann einerseits aus einem wiederholten Diffie-Hellman Schlüsselaustausch, als auch Funktionen zur weiteren Schlüsselerzeugung, den sogenannten Key Derivation Functions (kurz KDF).\nWeitere Informationen zum Diffie-Hellman Schlüssel Austausch findet ihr in der entsprechenden Visualisierung.\n\nIn diesem Demo-Szanario beginnen wir damit das Alice eine Nachricht an Bob versendet. Daher sind gewisse Schlüssel auf Bob's Seite noch nicht vorhanden, da diese erst beim Empfang der ersten Nachricht erzeugt werden. 
=======
SignalEncryption_TabDesc=Hier folgt eine einführende Beschreibung

SignalEncryption_TabTitle2=Double Ratchet Algorithmus
SignalEncryption_TabDesc2=Alice und Bob verfügen jeweils über eine Root, eine Sending und eine Receiving Chain. Ihre Funktionen werden in den folgenden Schritten nun erklärt.

>>>>>>> c9b4c7de1aa72188fcfa5e89afb35d5d0c51c91b
SignalEncryption_TblTitel_Key=Schlüssel
SignalEncryption_TblTitel_Description=Beschreibung
SignalEncryption_TblTitel_ValuesAlice=Alice's Schlüssel
SignalEncryption_TblTitel_ValuesBob=Bob's Schlüssel

SignalEncryption_KeyName_Diffie_Private=Diffie Hellman Private Key
SignalEncryption_KeyName_Diffie_Public=Diffie Hellman Public Key
SignalEncryption_KeyName_Shared=Shared Secret Key
SignalEncryption_KeyName_Root=Root Chain Key
SignalEncryption_KeyName_Sending=Sending Chain Key
SignalEncryption_KeyName_Receiving=Receiving Chain Key
SignalEncryption_KeyName_MsgKey=Message Key

SignalEncryption_DescText_Diffie_Private=Der Private DH Schlüssel der jeweiligen Person
SignalEncryption_DescText_Diffie_Public=Der öffentliche DH Schlüssel der jeweiligen Person
SignalEncryption_DescText_Shared=Geheimer Schlüssel der von den Kommunikationspartnern mittels einem vereinbarten Schlüsselaustausch erstellt wird. Dieser Schlüssel dient als erster Root
SignalEncryption_DescText_Root=Der Root Chain Key wird als Ausgangswert für die Sending und Receiving Chains verwendet.
SignalEncryption_DescText_Sending=Der Sending Chain Key wird verwendet um einen Message Key zu generieren. 
SignalEncryption_DescText_Receiving=Der Receiving Chain Key wird verwendet um einen Message Key zu generieren.
SignalEncryption_DescText_MsgKey=Der Message Key ist ein Output aus der Sending Chain bzw. der Receiving Chain und wird verwendet um eine Nachricht zu ver- oder entschlüsseln."


SignalEncryption_btn_generateBoth=Alle Schlüssel neu erzeugen
SignalEncryption_btn_generateAlice=Alice's Schlüssel neu erzeugen
SignalEncryption_btn_generateBob=Bob's Schlüssel neu erzeugen

SignalEncryption_Dummy=Ich bin ein Dummy

SignalEncryption_btnName_Alice=Alice
SignalEncryption_btnName_Bob=Bob

SignalEncryption_AlgorithmGroupDescription=Algorithmus
SignalEncryption_stepGroupDescription=Aktueller Schritt
SignalEncryption_DiffieHellmanGroupDescription=Diffie Hellman Schlüsselaustausch (DH)
SignalEncryption_RootChainDescription=Root Chain
SignalEncryption_SendingChainDescription=Sending Chain
SignalEncryption_ReceivingChainDescription=Receiving Chain

SignalEncryption_aliceDiffieHellmanLabel1=Bobs DH öffentlicher Schlüssel
SignalEncryption_aliceDiffieHellmanLabel2=DH Schlüsselaustausch
SignalEncryption_aliceDiffieHellmanLabel3=Alice' DH Schlüsselpaar
SignalEncryption_bobDiffieHellmanLabel1=Alice' DH öffentlicher Schlüssel
SignalEncryption_bobDiffieHellmanLabel2=DH Schlüsselaustausch
SignalEncryption_bobDiffieHellmanLabel3=Bob's DH Schlüsselpaar

SignalEncryption_aliceRootChainLabel1=Root Chain Schlüssel
SignalEncryption_aliceRootChainLabel2=KDF
SignalEncryption_aliceRootChainLabel3=Neuer Root Chain Schlüssel
SignalEncryption_bobRootChainLabel1=Root Chain Schlüssel
SignalEncryption_bobRootChainLabel2=KDF
SignalEncryption_bobRootChainLabel3=Neuer Root Chain Schlüssel
    
SignalEncryption_aliceSendingChainLabel1=Sending Chain Schlüssel
SignalEncryption_aliceSendingChainLabel2=Konstanter Wert
SignalEncryption_aliceSendingChainLabel3=KDF
SignalEncryption_aliceSendingChainLabel4=Sending Schlüssel
SignalEncryption_aliceSendingChainLabel5=Neuer Sending Chain Schlüssel
SignalEncryption_bobSendingChainLabel1=Sending Chain Schlüssel
SignalEncryption_bobSendingChainLabel2=KDF
SignalEncryption_bobSendingChainLabel3=Konstanter Wert
SignalEncryption_bobSendingChainLabel4=Sending Schlüssel
SignalEncryption_bobSendingChainLabel5=Neuer Sending Chain Schlüssel
    
SignalEncryption_aliceReceivingChainLabel1=Receiving Chain Schlüssel
SignalEncryption_aliceReceivingChainLabel2=Konstanter Wert
SignalEncryption_aliceReceivingChainLabel3=KDF
SignalEncryption_aliceReceivingChainLabel4=Receiving Schlüssel
SignalEncryption_aliceReceivingChainLabel5=Neuer Receiving Chain Schlüssel
SignalEncryption_bobReceivingChainLabel1=Receiving Chain Schlüssel
SignalEncryption_bobReceivingChainLabel2=KDF
SignalEncryption_bobReceivingChainLabel3=Konstanter Wert
SignalEncryption_bobReceivingChainLabel4=Receiving Schlüssel
SignalEncryption_bobReceivingChainLabel5=Neuer Receiving Chain Schlüssel

<<<<<<< HEAD
SignalEncryption_aliceDescriptionText0=Alice initialisiert in diesem Beispiel die Kommunikation mit Bob.
SignalEncryption_aliceDescriptionText1=Eine Schlüsselableitungsfunktion (Key Derivation Function, KDF), bekommt einen Schlüssel und einen konstanten Wert als Input und erstellt einen neuen Schlüssel.\r\n Test
SignalEncryption_aliceDescriptionText2=text
SignalEncryption_aliceDescriptionText3=text
SignalEncryption_aliceDescriptionText4=text
SignalEncryption_aliceDescriptionText5=text

SignalEncryption_bobDescriptionText0=Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
SignalEncryption_bobDescriptionText1=text
SignalEncryption_bobDescriptionText2=tet
SignalEncryption_bobDescriptionText3=text
SignalEncryption_bobDescriptionText4=text
SignalEncryption_bobDescriptionText5=text
=======
SignalEncryption_aliceDescriptionText0=Zu Beginn steht Alice Root Chain, diese verwendet den Shared Secret Key als ersten Ausgangswert. Durch eine Key Derivation Function (KDF) wird nun ein neuer Schlüssel erzeugt.
SignalEncryption_aliceDescriptionText1=
SignalEncryption_aliceDescriptionText2=
SignalEncryption_aliceDescriptionText3=
SignalEncryption_aliceDescriptionText4=
SignalEncryption_aliceDescriptionText5=

SignalEncryption_bobDescriptionText0=
SignalEncryption_bobDescriptionText1=
SignalEncryption_bobDescriptionText2=
SignalEncryption_bobDescriptionText3=
SignalEncryption_bobDescriptionText4=
SignalEncryption_bobDescriptionText5=
>>>>>>> c9b4c7de1aa72188fcfa5e89afb35d5d0c51c91b
