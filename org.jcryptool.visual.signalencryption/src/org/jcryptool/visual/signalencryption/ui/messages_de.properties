#Eclipse modern messages class
#Mon Mar 31 15:53:42 CEST 2014

SignalEncryption_TabTitle=Signal Protokoll - Double Ratchet
SignalEncryption_TabDesc=Beim Signal Protokoll handelt es sich um jenes Verfahren das beim Namensgebenden Signal Messenger als auch WhatsApp zum Einsatz kommt.\nDieses Protokoll gliedert sich grob in 2 Abschnitte:\n         Ein 3-facher Diffie-Hellman (DH) Schlüsselaustausch.\n         Das \u201EDouble Ratchet\u201C Verfahren zum Versenden und Empfangen von Nachrichten.\n\nIn diesem Plugin wird nun das Double Ratchet Verfahren Schritt für Schritt erklärt. Was konkret beim Senden der allerersten Nachricht geschieht ist in der Onlinehilfe dokumentiert. Wichtig davon zu wissen ist, dass Alice so den Shared Secret Schlüssel erhält.\nDas Double Ratchet besteht dann einerseits aus einem wiederholten Diffie-Hellman Schlüsselaustausch, als auch Funktionen zur weiteren Schlüsselerzeugung, den sogenannten Schlüssel Derivation Functions (kurz KDF).\nWeitere Informationen zum Diffie-Hellman Schlüssel Austausch findet ihr in der entsprechenden Visualisierung.\n\nIn diesem Demo-Szanario beginnen wir damit das Alice eine Nachricht an Bob versendet. Daher sind gewisse Schlüssel auf Bob's Seite noch nicht vorhanden, da diese erst beim Empfang der ersten Nachricht erzeugt werden. 
SignalEncryption_TblTitel_Key=Schlüssel
SignalEncryption_TblTitel_Description=Beschreibung
SignalEncryption_TblTitel_ValuesAlice=Alices Schlüssel
SignalEncryption_TblTitel_ValuesBob=Bobs Schlüssel

SignalEncryption_KeyName_Diffie_Private=Diffie Hellman Privater Schlüssel
SignalEncryption_KeyName_Diffie_Public=Diffie Hellman öffentlicher Schlüssel
SignalEncryption_KeyName_Shared=Shared Secret Schlüssel
SignalEncryption_KeyName_Root=Root Chain Schlüssel
SignalEncryption_KeyName_Sending=Sending Chain Schlüssel
SignalEncryption_KeyName_Receiving=Receiving Chain Schlüssel
SignalEncryption_KeyName_MsgKey=Message Schlüssel

SignalEncryption_DescText_Diffie_Private=Der Private DH Schlüssel der jeweiligen Person
SignalEncryption_DescText_Diffie_Public=Der öffentliche DH Schlüssel der jeweiligen Person
SignalEncryption_DescText_Shared=Geheimer Schlüssel der von den Kommunikationspartnern mittels einem vereinbarten Schlüsselaustausch erstellt wird. Dieser Schlüssel dient als erster Root
SignalEncryption_DescText_Root=Wird als Ausgangswert für die Sending und Receiving Chains verwendet.
SignalEncryption_DescText_Sending=Wird verwendet um einen Message Schlüssel zu generieren. 
SignalEncryption_DescText_Receiving=Wird verwendet um einen Message Schlüssel zu generieren.
SignalEncryption_DescText_MsgKey=Ist ein Output aus der Sending Chain bzw. der Receiving Chain und wird verwendet um eine Nachricht zu ver- oder entschlüsseln."


SignalEncryption_btn_generateBoth=Alle Schlüssel neu erzeugen
SignalEncryption_btn_generateAlice=Alices Schlüssel neu erzeugen
SignalEncryption_btn_generateBob=Bobs Schlüssel neu erzeugen

SignalEncryption_btnName_Alice=Alice
SignalEncryption_btnName_Bob=Bob

SignalEncryption_alice_AlgorithmGroupDescription=Alice
SignalEncryption_bob_AlgorithmGroupDescription=Bob
SignalEncryption_stepGroupDescription=Aktueller Schritt
SignalEncryption_DiffieHellmanGroupDescription=Diffie Hellman Schlüsselaustausch (DH)
SignalEncryption_RootChainDescription=Root Chain
SignalEncryption_SendingChainDescription=Sending Chain
SignalEncryption_ReceivingChainDescription=Receiving Chain
SignalEncryption_MessageBoxDescription=Nachricht

SignalEncryption_aliceDiffieHellmanLabel1=Bobs DH öffentlicher Schlüssel
SignalEncryption_aliceDiffieHellmanLabel2=DH Schlüsselaustausch
SignalEncryption_aliceDiffieHellmanLabel3=Alices DH Schlüsselpaar
SignalEncryption_bobDiffieHellmanLabel1=Alices DH öffentlicher Schlüssel
SignalEncryption_bobDiffieHellmanLabel2=DH Schlüsselaustausch
SignalEncryption_bobDiffieHellmanLabel3=Bobs DH Schlüsselpaar

SignalEncryption_aliceRootChainLabel1=Root Chain Schlüssel
SignalEncryption_aliceRootChainLabel2=KDF
SignalEncryption_aliceRootChainLabel3=Neuer Root Chain Schlüssel
SignalEncryption_bobRootChainLabel1=Root Chain Schlüssel
SignalEncryption_bobRootChainLabel2=KDF
SignalEncryption_bobRootChainLabel3=Neuer Root Chain Schlüssel
    
SignalEncryption_aliceSendingChainLabel1=Sending Chain Schlüssel
SignalEncryption_aliceSendingChainLabel2=Konstanter Wert
SignalEncryption_aliceSendingChainLabel3=KDF
SignalEncryption_aliceSendingChainLabel4=Sending Schlüssel
SignalEncryption_aliceSendingChainLabel5=Neuer Sending Chain Schlüssel
SignalEncryption_bobSendingChainLabel1=Sending Chain Schlüssel
SignalEncryption_bobSendingChainLabel2=KDF
SignalEncryption_bobSendingChainLabel3=Konstanter Wert
SignalEncryption_bobSendingChainLabel4=Sending Schlüssel
SignalEncryption_bobSendingChainLabel5=Neuer Sending Chain Schlüssel
    
SignalEncryption_aliceReceivingChainLabel1=Receiving Chain Schlüssel
SignalEncryption_aliceReceivingChainLabel2=Konstanter Wert
SignalEncryption_aliceReceivingChainLabel3=KDF
SignalEncryption_aliceReceivingChainLabel4=Receiving Schlüssel
SignalEncryption_aliceReceivingChainLabel5=Neuer Receiving Chain Schlüssel
SignalEncryption_bobReceivingChainLabel1=Receiving Chain Schlüssel
SignalEncryption_bobReceivingChainLabel2=KDF
SignalEncryption_bobReceivingChainLabel3=Konstanter Wert
SignalEncryption_bobReceivingChainLabel4=Receiving Schlüssel
SignalEncryption_bobReceivingChainLabel5=Neuer Receiving Chain Schlüssel

SignalEncryption_aliceDescriptionText0=Alice initialisiert die Kommunikation.
SignalEncryption_bobDescriptionText0=Warten auf Erhalt der ersten Nachricht.
SignalEncryption_stepText1=Schritt 1. Diffie Hellman Ratchet: Zu Beginn erstellt Alice ein Diffie Hellman Schlüssel Pair. Sie führt eine Diffie Hellman Calculation durch, verwendet dabei ihren Privaten Schlüssel und Bobs öffentlicher Schlüssel und berechnet sich daraus einen Output. Dieser Vorgang wird als Diffie Hellman Ratchet Step bezeichnet.
SignalEncryption_stepText2=Schritt 2. Root Chain: Der nächste Schritt ist eine Schlüssel Derivation Function. Wir definieren eine KDF als eine kryptografische Funktion, die einen geheimen und zufälligen KDF-Schlüssel und einen Input annimmt und einen Output zurückgibt. Der KDF-Schlüssel der Root Chain ist der Root Chain Schlüssel. Als ersten Root Chain Schlüssel wird der Shared Secret Schlüssel verwendet welcher im X3DH (Online Hilfe) erstellt wird. Als Input für die Root Chain wird der zuvor berechnete Output vom Diffie Hellman Ratchet Step verwendet. Der Output der Root Chain wird in einen neuen Root Chain Schlüssel und einen Sending Chain Schlüssel aufgeteilt.
SignalEncryption_stepText3=Schritt 3. Sending Chain: Die Sending Chain ist ebenfalls eine KDF. Als Schlüssel wird der zuvor in der Root Chain erstellte Sending Chain Schlüssel verwendet. Im Gegensatz zur Root Chain bekommt die Sending Chain einen Konstanten Wert als Input. Der Output der Sending Chain ist der Message Schlüssel und ein neuer Sending Chain Schlüssel.
SignalEncryption_stepText4=Schritt 4. Nachricht verfassen: 
SignalEncryption_aliceStepText5=Schritt 5. Nachricht verschlüsseln & senden: Alice verschlüsselt nun ihre Nachricht und verwendet dabei ihren Message Schlüssel. Neben ihrer verschlüsselten Nachricht sendet Alice ihren Diffie Hellman öffentlicher Schlüssel.\nNun weiter auf Bobs Seite
SignalEncryption_bobStepText5=Schritt 5. Nachricht empfangen
SignalEncryption_stepText6=Schritt 6. Diffie Hellman Ratchet: Bob führt eine Diffie Hellman Calculation durch, verwendet dabei seinen Private Schlüssel und den von Alice empfangenen Public Schlüssel und berechnet sich daraus einen Output.
SignalEncryption_stepText7=Schritt 7. Root Chain: Als Input für die Root Chain wird der zuvor berechnete Output vom Diffie Hellman Ratchet Step verwendet. Der Output der Root Chain wird in einen neuen Root Chain Schlüssel und einen Receiving Chain Schlüssel aufgeteilt.
SignalEncryption_stepText8=Schritt 8. Receiving Chain: Als Schlüssel wird der zuvor in der Root Chain erstellte Receiving Chain Schlüssel verwendet. Als Konstanter Input wird der gleiche Wert verwendet, den Alice als Input in ihrer Sending Chain verwendet hat. Der Output der Receiving Chain ist der Message Schlüssel und ein neuer Receiving Chain Schlüssel.
SignalEncryption_stepText9=Schritt 9. Nachricht entschlüsseln: Bob entschlüsselt die Nachricht und verwendet dabei den Message Schlüssel.