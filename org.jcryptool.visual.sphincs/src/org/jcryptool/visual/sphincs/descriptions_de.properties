# SPHINCS Plugin German -- Eclipse modern messages class

# Tab descriptions
SphincsTab_0=Bitmasken- und Schlüsselerzeugung
SphincsTab_1=Signierung und Verifikation
SphincsTab_2=SPHINCS-Übersicht


# Title description
SphincsDescription_titleBox=SPHINCS-Signatur
SphincsDescription_titleDesc=Das Hash-basierte Signaturverfahren SPHINCS erlaubt das Erstellen von Signaturen, die auch gegen Angriffe mit Quantencomputern Sicherheit bietet. Dazu werden Verfahren wie HORST-Strukturen und WOTS+-Einmalsignaturen verwendet. SPHINCS ist zustandslos.


# Switching Tabs messages/ state messages
SignatureMessageBoxText=Bitte erstellen Sie zuerst eine Signatur im Reiter Signierung und Verifikation.
SphincsTree_Generation_Info=Bitte erstellen Sie zuerst Schlüsselpaare.
NoKeyText=Bitte erstellen Sie zuerst einen Schlüssel im Reiter Bitmasken- und Schlüsselerzeugung.
Info=Info


### SPHINCS Tab "Bitmasks and Key Generation" ###
SphincsDescription_grp_seed=Seed
SphincsDescription_btn_Generation=Schlüsselpaar erzeugen
SphincsDescription_grp_bitmask=Bitmasken
SphincsDescription_grp_key=Öffentlicher SPHINCS-Schlüssel
SphincsDescription_lbl_information=Schlüsselinformation
SphincsDescription_keyInfo1=SPHINCS-256\n\nQuanten-Sicherheit: 128 Bit\nPrivate-Key:
SphincsDescription_keyInfo2=\nPublic-Key: 
SphincsDescription_keyInfo3=\nDie Schlüsselgenerierung hat das Ziel, den obersten Knoten der WOTS+-Struktur zu berechnen.\nDer WOTS+-Wurzelknoten (= SPHINCS-Public Key) besteht aus einer Menge von Bitmasken (hier Base64 angezeigt). Der Seed wird in der Schlüsselerzeugung benutzt, um die Bitmasken zu generieren. Es gibt 32 Bitmasken a 256 Bit.\nWeitere Informationen finden sie in der Onlinehilfe.
SphincsDescription_btn_renewKey=Neues Schlüsselpaar erzeugen
SphincsDescription_bracket=(
SphincsDescription_bracketClose=)

### SPHINCS Tab "Sign and Verify" ###
# Groupbox
SphincsSign_Group_0=Nachricht
SphincsSign_Group_1=Signatur
SphincsSign_Text_0=Beispiel-Nachricht: Geben Sie hier Ihre Nachricht ein, die Sie mit dem SPHINCS-Verfahren signieren möchten.

# Label
SphincsSign_Label_0=Gewünschten Teil farblich hervorheben:
SphincsSign_Label_1=Aktuelles Blatt

#Button
SphincsSign_Button_0=Nachricht signieren
SphincsSign_Button_1=Authentifizierungspfad
SphincsSign_Button_2=aktuelles Blatt
SphincsSign_Button_3=HORST-Signatur

# Verify status/button
SphincsVerify_Generated=Signatur erzeugt
SphincsVerify_Success=Verifikation erfolgreich
SphincsVerify_Fail=Verifikation NICHT erfolgreich
SphincsVerify_Button_0=Signatur verifizieren


### SPHINCS Tab "SPHINCS-Overview" ###
SphincsDecription_Button_1=Beschreibung zu SPHINCS-Baum einblenden
SphincsDecription_Button_2=Beschreibung zu SPHINCS-Baum ausblenden

SphincsDecription_Text_0=SPHINCS-256 Baumdarstellung\nHier sehen Sie einen Ausschnitt der SPHINCS-Baumstruktur. Das SPHINCS-Verfahren basiert auf einem Hypertree mit der gesamten Baumhöhe h, bei SPHINCS-256 ist das h=60. Außerdem gibt es d=12 Schichten, welche jeweils wiederum Bäume entsprechen. Jede dieser Schichten hat eine Höhe von h/d = 60/12 = 5.  Je größer die Schicht, desto mehr Bäume mit Höhe 5 befinden sich auf der Schicht.\nDie einzelnen Schichten werden mit 12 Farben gekennzeichnet. Ganz unten links sieht man die HORST-Struktur: Diese wird auf der untersten Schicht zum Signieren von Nachrichten verwendet. Es gibt 2^16, also 65.536 HORST-Strukturen am Ende des Hypertrees. Bei dieser Darstellung hier sieht man allerdings nur die Struktur, mit der signiert wird. Nach rechts aufsteigend sieht man die WOTS+-Strukturen. Von diesen benötigt man den Hash ihrer Signaturen, um später die erstellte Signatur zu verifizieren.\nFür Details sehen Sie bitte in der Onlinehilfe nach. Für die WOTS-Strukturen sind auch entsprechende Plugins vorhanden.
SphincsDecription_Text_1=Info zu WOTS- und HORST-Elemente.


# Tree stuff
ZestLabelProvider_0= HORST
ZestLabelProvider_1= WOTS 
ZestLabelProvider_2=Hash des öffentlichen SPHINCS-Schlüssels
ZestLabelProvider_3=Public Key
ZestLabelProvider_9=Kein Root-Knoten
ZestLabelProvider_7=0
ZestLabelProvider_8=1

# Tree mouse over 
ZestLabelProvider_4=Inhalt

# Selected nodes
ZestLabelProvider_5=Inhalt des HORST-Baums
ZestLabelProvider_6=Inhalt des WOTS-Baums
