#Generated by ResourceBundle Editor (http://essiembre.github.io/eclipse-rbe/)

# Tab descriptions
SphincsPlusTab_1 = Parameter und Schlüsselerzeugung
SphincsPlusTab_2 = Signierung und Verifikation
SphincsPlusTab_3 = SPHINCS+ HyperTree
SphincsPlusTab_4 = SPHINCS+ FORS

# SphincsPlusParameterView
SphincsPlusParameterView_headLabel = SPHINCS+-Signatur
SphincsPlusParameterView_headDescription = SPHINCS+ ist ein zustandsloses, auf Hash-Verfahren basierendes Signaturverfahren. Bei SPHINCS+ handelt es sich um eine Weiterentwicklung von SPHINCS (auch als Plugin in JCT enthalten). Das SPHINCS+-Verfahren implementiert verschiedene Verbesserungen zur Verkleinerung der Signaturgröße. Es verwendet folgende Komponenten:  \u2022 WOTS+: ein One-Time-Signaturverfahren (Plugin in JCT). \u2022 XMSS: Ein Many-Time-Signaturverfahren, das Hypertree-Signaturen nutzt (Plugin in JCT). \u2022 FORS: ein Few-Time-Signaturverfahren, das die Nachricht signiert.
SphincsPlusParameterView_parameterGroup = Parameter
SphincsPlusParameterView_descriptionGroup = Beschreibung
SphincsPlusParameterView_secretKeyGroup = Secret- und Public-Key-Komponenten (Schlüssel-Komponenten)
SphincsPlusParameterView_publicKeyGroup = Public-Key-Komponenten
SphincsPlusParameterView_label_security_level = Sicherheit
SphincsPlusParameterView_label_characters = Hex-Zeichen
SphincsPlusParameterView_btn_generateKeys_set = Schlüssel setzen
SphincsPlusParameterView_btn_generateKeys_generate = Schlüssel generieren
SphincsPlusParameterView_parameterDescription = Sie können zwischen 6 Parametersätzen und 2 verschiedenen Hash-Algorithmen auswählen.\nMit Hilfe dieser Parameter können unterschiedliche Sicherheitsstufen erreicht werden. Für jede Sicherheitsstufe gibt es einen größenoptimierten (Endung 's' für "small") und einen geschwindigkeitsoptimierten (Endung 'f' für "fast") Parametersatz.\n\u2022 n: Der Sicherheitsparameter; er ist die Nachrichtenlänge sowie die Länge eines privaten Schlüssels, öffentlichen Schlüssels oder Signaturelements in Bytes\n\u2022 h: Die Höhe des Hypertrees\n\u2022 d: Die Anzahl der Ebenen im Hypertree\n\u2022 log(t) :Die Höhe eines Baums in FORS\n\u2022 k: Die Anzahl der Bäume in FORS\n\u2022 w: Der Winternitz-Parameter (ein Element der Menge {4,16,256})\n\u2022 bitsec: Die Bit-Sicherheit\n\u2022 sec level: Die Sicherheitsstufe gemäß den angegebenen Parametern\n\u2022 sig bytes: Die Größe der Signatur in Bytes\n\u2022 RANDOMIZE: Sorgt für Zufall, der beim Erzeugen einer Signatur verwendet wird. Setzt man diese Option auf "Ja", verhindert man, dass SPHINCS+-Signaturen deterministisch werden.
SphincsPlusParameterView_btnCheckButton_parameter = Manuelle Parametereingabe
SphincsPlusParameterView_btnCheckButton_keys = Manuelle Schlüssel-Eingabe
SphincsPlusParameterView_btnCheckButton_randomize = Randomize
SphincsPlusParameterView_messageBox_enter_parameter_manually_message = Bitte geben Sie nur SPHINCS+ konforme Werte ein.\nSiehe Dokumentation.
SphincsPlusParameterView_messageBox_enter_parameter_manually_info = Achtung
SphincsPlusParameterView_messageBox_no_sk_seed_entered_message = Bitte geben Sie alle Schlüssel mit der richtigen Länge ein!\nDer eingegebene Wert für SK.seed ist zu kurz.
SphincsPlusParameterView_messageBox_no_pk_seed_entered_message = Bitte geben Sie alle Schlüssel mit der richtigen Länge ein!\nDer eingegebene Wert für PK.seed ist zu kurz.
SphincsPlusParameterView_messageBox_no_sk_prf_entered_message = Bitte geben Sie alle Schlüssel mit der richtigen Länge ein!\nDer eingegebene Wert für SK.prf ist zu kurz.
SphincsPlusParameterView_messageBox_no_pk_root_entered_message = Bitte geben Sie alle Schlüssel mit der richtigen Länge ein!\nDer eingegebene Wert für PK.root ist zu kurz.
SphincsPlusParameterView_messageBox_no_keys_entered_info = Fehlende/unvollständige Eingabe
SphincsPlusParameterView_messageBox_switch_to_hex_message = Bitte wählen Sie zuerst die Hex-Darstellung.
SphincsPlusParameterView_messageBox_switch_to_hex_info = Falsche Zeichendarstellung
SphincsPlusParameterView_combo_randomize_yes = Ja
SphincsPlusParameterView_combo_randomize_no = Nein
SphincsPlusParameterView_messageBox_parameter_empty_message = Es wurden nicht alle Parameter eingegeben.\nDaher werden die Werte des oben gewählten Parametersatzes verwendet.
SphincsPlusParameterView_messageBox_parameter_empty_info = Fehlende Parameter
SphincsPlusParameterView_messageBox_continue_in_second_tab_message = Der Wert von PK.root wurde angepasst.\nSie können nun im 2. Tab fortfahren.
SphincsPlusParameterView_messageBox_continue_in_second_tab_message_2 = Sie können nun im 2. Tab fortfahren.
SphincsPlusParameterView_messageBox_continue_in_second_tab_info = Schlüssel gespeichert

# SphincsPlusSignAndVerifyView
SphincsPlusSignAndVerifyView_messageGroup_part_1 = Nachricht (aktuelle Länge 
SphincsPlusSignAndVerifyView_messageGroup_part_2 = mindestens 
SphincsPlusSignAndVerifyView_text_inputMessage = Geben Sie hier Ihre Nachricht ein, die mit dem SPHINCS+-Verfahren signiert werden soll.
SphincsPlusSignAndVerifyView_text_sig_description = Das Generieren einer SPHINCS+-Signatur besteht aus vier Schritten: \n1. R: Ein Zufallswert R wird pseudozufällig erzeugt. Bei der Berechnung von R verwendet die Pseudozufallsfunktion (PRF) eine n-Byte-Zeichenfolge als Eingabe, die mit "Null" initialisiert wird, jedoch mit Zufälligkeit überschrieben werden kann, wenn die globale Variable RANDOMIZE gesetzt ist (RANDOMIZE kann im ersten Untertab "Parameter und Schlüsselerzeugung" gesetzt werden).\n2. Dieses R wird verwendet, um einen m-Byte Message-Digest zu berechnen, welcher danach aufgeteilt wird.\n3. SIG FORS: Eine FORS-Signatur ist ein Array der Länge k(log t + 1) von n-Byte-Zeichenfolgen. Die FORS-Signatur enthält k private Schlüsselwerte mit jeweils n-Bytes und die zugehörigen Authentifizierungspfade, log t Werte, die jeweils n-Bytes lang sind.\n4. SIG HT: Eine Hypertree-Signatur ist eine Bytefolge mit der Länge (h + d * len) * n. Sie besteht aus d XMSS-Signaturen, jeweils (h / d + len) * n Bytes lang.
SphincsPlusSignAndVerifyView_signButtonGroup = Signieren und Verifizieren
SphincsPlusSignAndVerifyView_btn_sign = Nachricht signieren
SphincsPlusSignAndVerifyView_btn_verify = Signatur verifizieren
SphincsPlusSignAndVerifyView_lbl_status_signed = Signiert
SphincsPlusSignAndVerifyView_lbl_status_verified = Verifizierung OK
SphincsPlusSignAndVerifyView_lbl_status_verification_failed = Verifikation FEHLGESCHLAGEN
SphincsPlusSignAndVerifyView_lbl_status_text_changed = Nachricht wurde geändert
SphincsPlusSignAndVerifyView_no_key_message = Bitte generieren Sie zuerst die Schlüssel (im ersten 1. Tab).
SphincsPlusSignAndVerifyView_no_key_info = Keine Schlüssel generiert
SphincsPlusSignAndVerifyView_sign_first_message = Bitte erstellen Sie zuerst eine Signatur.
SphincsPlusSignAndVerifyView_sign_first_info = Keine Signatur vorhanden
SphincsPlusSignAndVerifyView_encodingButtonGroup = Zeichendarstellung:
SphincsPlusSignAndVerifyView_valueGroup = Signaturwerte
SphincsPlusSignAndVerifyView_descriptionGroup = Beschreibung
SphincsPlusSignAndVerifyView_text_info_inputMessage_part_1 = Die zu signierende Nachricht muss die folgende Mindestlänge besitzen: 
SphincsPlusSignAndVerifyView_text_info_inputMessage_part_2 = \nDas Signieren kann einige Sekunden dauern.\nDie Signatur steht dann in den Feldern der Gruppierung "Signaturwerte".
SphincsPlusSignAndVerifyView_infoGroup = Information

# SphincsPlusTreeView
SphincsPlusTreeView_descLabel = SPHINCS+ HyperTree
SphincsPlusTreeView_collapsedPart_expanded = Beschreibung zu SPHINCS+-HyperTree ausblenden
SphincsPlusTreeView_collapsedPart_collapsed = Beschreibung zu SPHINCS+-HyperTree einblenden
SphincsPlusTreeView_descText_general = Der folgende SPHINCS+-HyperTree (HT) hilft, sich mit allen Komponenten von SPHINCS+ vertraut zu machen und den Prozess der Schlüsselgenerierung und einer Signatur zu verstehen.\nDer HT ist ein Baum, der aus mehreren Schichten von XMSS-Bäumen besteht. Die obersten Bäume und die Bäume der Zwischenschicht werden verwendet, um die öffentlichen Schlüssel, d. H. die Wurzelknoten der XMSS-Bäume auf der jeweils nächsten Schicht darunter, zu signieren. Bäume der untersten Ebene werden zum Signieren der eigentlichen Nachrichten verwendet, die in SPHINCS+ öffentliche FORS-Schlüssel sind.\nAlle XMSS-Bäume im HT sind gleich hoch. Angenommen der HT hat eine Gesamthöhe h mit d Schichten von XMSS-Bäumen der Höhe h '= h / d, dann enthält die Schicht d - 1 einen XMSS-Baum, Schicht d - 2 enthält 2^h' XMSS-Bäume und so weiter. Die Ebene 0 enthält schließlich 2^(h-h') XMSS-Bäume.\nFür diesen Baum wurden folgende Werte verwendet: h=4, d=2.\n\u2022 Höhe eines XMSS-Baums: h'= (4 / 2) = 2 \n\u2022 Bäume der Schicht d - 1 = 1 \n\u2022 Bäume der Schicht d - 2 (Schicht 0) = 2 ^ (h - h ') = 2 ^ (4 - 2) = 4\nWeitere Informationen werden durch Klicken auf eine Komponente des HT angezeigt.
SphincsPlusTreeView_descText_root_node_d = SPHINCS+-Public-Key = HT-Public-Key ist der öffentliche Schlüssel (Stammknoten) des einzelnen XMSS-Baums auf der obersten Ebene.
SphincsPlusTreeView_descText_root_node_XMSS = 

# SphincsPlusForsView
SphincsPlusForsView_descLabel = SPHINCS+ FORS
SphincsPlusForsView_collapsedPart_expanded = Beschreibung zu SPHINCS+-FORS ausblenden
SphincsPlusForsView_collapsedPart_collapsed = Beschreibung zu SPHINCS+-FORS einblenden
SphincsPlusForsView_description_rootNode = Im Kontext von SPHINCS+ wird der öffentliche FORS-Schlüssel niemals alleine generiert. Es wird nur zusammen mit einer Signatur generiert.
SphincsPlusForsView_descText_general = Der SPHINCS+-Hypertree HT wird nicht zum Signieren der eigentlichen Nachrichten verwendet, sondern für die öffentlichen Schlüssel von FORS-Instanzen, die wiederum zum Signieren von Message Digests verwendet werden.

