Buttons_0=Zurücksetzen
Buttons_1=Setzt alle Werte zurück
Buttons_11=Protokoll mehrmals automatisch durchführen
Buttons_2=Neuer Durchlauf
Buttons_3=Ermöglicht einen neuen Durchlauf durch das Protokoll
Buttons_4=Mehrmals ausführen
GeneralParams_0=n :
GeneralParams_1=-
GeneralParams_2=-
Generator_0=Primzahlen spielen in der Kryptografie eine wichtige Rolle.\nHier erzeugen Sie zwei zufällige Primzahlen p und q aus dem Wertebereich [2^Untergrenze, 2^Obergrenze].\nDie Summe der Exponenten der Obergrenzen muss kleiner sein als 30.
Generator_1=Wertebereich der beiden Primzahlen
Generator_10=p: Obergrenze muss eine ganze Zahl sein
Generator_11=Summe der Obergrenzen > 30
Generator_12=q: Untergrenze muss gesetzt sein
Generator_13=q: Obergrenze muss gesetzt sein
Generator_14=q: Untergrenze muss eine ganze Zahl sein
Generator_15=q: Obergrenze muss eine ganze Zahl sein
Generator_16=Summe der Obergrenzen > 30
Generator_17=Die Primzahlen p und q generieren
Generator_18=Primzahlen übernehmen
Generator_19=Übernimmt die generierten Primzahlen
Generator_2=Unabhängig voneinander eingeben
Generator_20=Schließen
Generator_21=Beendet den Dialog, ohne die Primzahlen zu übernehmen
Generator_3=Beide gleich (nur eine eingeben)
Generator_6=Primzahlen generieren
Generator_7=p: Untergrenze muss gesetzt sein
Generator_8=p: Obergrenze muss gesetzt sein
Generator_9=p: Untergrenze muss eine ganze Zahl sein
Introduction_0=Situation
Introduction_10=Prüfer
Introduction_22=Wählen Sie zwei Primzahlen p und q. Die Zahl n = pq ist der öffentliche Modul. Carol behauptet, sie sei Alice und kenne einen Vektor s mit v = s² mod n. Die Quadratzahl v wird öffentlich bekannt gegeben.
Introduction_24=Wählen Sie zwei Primzahlen p und q. Die Zahl n = pq ist der öffentliche Modul. Carol behauptet, sie sei Alice und kenne eine Zahl s mit v = s² mod n. Die Quadratzahl v wird öffentlich bekannt gegeben.
Introduction_26=Carol möchte sich als Alice ausgeben und behauptet, einen Isomorphismus f von G_0 zu G_1 zu kennen. Nun möchte sie Bob davon überzeugen, dass sie f kennt.
Introduction_28=Carol (C) behauptet, Alice zu sein und den geheimen Code für die Tür zwischen dem linken und dem rechten Raum zu kennen. Sie soll sich Bob (B) gegenüber authentifizieren.
Introduction_29=Angreifer
Introduction_3=Wählen Sie zwei Primzahlen p und q. Die Zahl n = pq ist der öffentliche Modul. Alice kennt einen Vektor s mit Einträgen s_i < n mit ggT(s_i, n) = 1 und v = s² mod n. Die Quadratzahl v wird öffentlich bekannt gegeben.
Introduction_5=Wählen Sie zwei Primzahlen p und q. Die Zahl n = pq ist der öffentliche Modul. Alice kennt eine Zahl s < n und v = s² mod n. Die Quadratzahl v wird öffentlich bekannt gegeben.
Introduction_7=Dieses Protokoll beruht auf dem Graphenisomorphie-Problem. Alice kennt einen Isomorphismus f von G_0 zu G_1. Bob möchte sich nun von Alice beweisen lassen, dass sie f wirklich kennt.
Introduction_9=Alice (A) behauptet, den geheimen Code für die Tür zwischen dem linken und dem rechten Raum zu kennen. Sie soll sich Bob (B) gegenüber authentifizieren.
PrimeGenerator_0=Primzahleingabe
PrimeGenerator_1=p :
PrimeGenerator_2=Primzahlen generieren
PrimeGenerator_3=Die Primzahlen p und q generieren
PrimeGenerator_4=q :
PrimeGenerator_5=Geheimnis erstellen
PrimeGenerator_6=Primzahlen übernehmen
PrimeGenerator_7=Die Primzahlen übernehmen
PrimeGenerator_8=______________
PrimeGeneratorListener_0=p und q müssen gesetzt sein
PrimeGeneratorListener_1=p muss gesetzt sein
PrimeGeneratorListener_2=q muss gesetzt sein
PrimeGeneratorListener_3=p muss eine ganze Zahl sein
PrimeGeneratorListener_4=q muss eine ganze Zahl sein
PrimeGeneratorListener_5=p muss eine Primzahl sein
PrimeGeneratorListener_6=q muss eine Primzahl sein
PrimeGeneratorListener_7=p darf nicht negativ sein
PrimeGeneratorListener_8=q darf nicht negativ sein
PrimePanel_0=Primzahl 
PrimePanel_1=Untergrenze: 2^
PrimePanel_2=7
PrimePanel_3=Obergrenze: 2^
PrimePanel_4=8
PrimePanel_5=Ergebnis:
Repeat_0=Mehrmals durchführen
Repeat_1=% Wahrscheinlichkeit, Bob zu täuschen.
Repeat_2=Alice kennt das Geheimnis. Sie wird alle Anfragen richtig beantworten.
Repeat_3=Carol kennt das Geheimnis nicht. Sie wird von k Anfragen im Schnitt k/2 richtig beantworten.
Repeat_4=Anzahl der Anfragen:
Repeat_5=Carol stellte {0} Anfragen. Davon waren {1} ({2}%) richtig.
Repeat_6=Bob wurde getäuscht.
Repeat_7=Bob wurde nicht getäuscht.
Repeat_8=Das Protokoll wird so oft durchgeführt, wie Sie angegeben haben.
Repeat_9=Start
